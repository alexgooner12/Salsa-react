{"version":3,"sources":["components/navigation.js","components/danceMove.js","config/firebase.js","actions/danceListActions.js","helpers/validation.js","components/danceMovePage.js","components/group.js","actions/groupListActions.js","components/groupListPage.js","constants/months.js","actions/paymentListActions.js","actions/attendanceListActions.js","actions/membersActions.js","components/registrationPage.js","components/profile.js","components/profilePage.js","components/paymentPage.js","components/membersPage.js","components/schedule.js","actions/scheduleListActions.js","components/schedulePage.js","components/attendance.js","components/attendancePage.js","App.js","serviceWorker.js","reducers/rootReducer.js","reducers/danceListReducer.js","reducers/groupListReducer.js","reducers/scheduleListReducer.js","reducers/memberListReducer.js","reducers/paymentListReducer.js","reducers/attendanceListReducer.js","index.js"],"names":["Navigation","react_default","a","createElement","Navbar","collapseOnSelect","expand","bg","variant","Brand","react_router_dom","className","to","src","alt","Toggle","aria-controls","Collapse","id","Nav","NavItem","exact","activeClassName","DanceMove","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","getEditingValue","type","event","setState","updatedDanceMove","_objectSpread","state","defineProperty","target","value","handleCancel","editingMode","danceMove","handleSave","preventDefault","editDanceMove","handleEdit","handleDelete","deleteDanceMove","_this2","key","Fragment","Form","Control","name","onChange","Label","column","sm","span","offset","htmlFor","as","difficulty","Button","onClick","React","Component","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","db","firestore","ADD_DANCE_MOVE","EDIT_DANCE_MOVE","DELETE_DANCE_MOVE","getElementIfNotOnList","list","element","length","find","listElement","findElement","alert","concat","DanceMovePage","componentWillReceiveProps","danceList","handleDanceMove","handleAddDanceMove","addDanceMove","clearState","newDanceMove","createDanceMove","assign","sortDanceMoves","sortedDanceList","sortDanceMovesBySelectedValue","selectedValue","Array","from","sort","b","onSubmit","Group","Row","Col","placeholder","required","Table","striped","hover","responsive","map","el","components_danceMove","compose","connect","dispatch","collection","add","danceListActions_objectSpread","then","docRef","payload","catch","error","console","log","doc","update","delete","firestoreConnect","updatedGroup","group_objectSpread","group","editGroup","deleteGroup","ADD_GROUP","EDIT_GROUP","DELETE_GROUP","GroupListPage","getGroupValue","handleAddGroup","addGroup","newGroup","groupList","createGroup","components_group","groupListActions_objectSpread","months","ADD_PAYER","EDIT_PAYER","DISABLE_PAYER","RESTORE_PAYER","TOGGLE_PAYMENT","getMonthsAfterRegistration","member","indexOfMonthOfRegistration","Date","startDate","getMonth","slice","ADD_ATTENDANCE","EDIT_ATTENDANCE","DELETE_ATTENDANCE","TOGGLE_ATTENDANT","EDIT_ATTENDANT","createAttendance","schedule","getState","scheduleId","month","date","memberList","possibleAttendants","getPossibleAttendants","attendanceListActions_objectSpread","filter","getAvailableMembers","availableMember","createPossibleAttendants","scheduleDate","memberStartDate","hasAttended","toggleAttendant","updatedAttendance","updatedAttendant","setAttendantPresence","danceMoves","ADD_DANCE_MOVES_TO_ATTENDANT","attendant","addDanceMovesToMember","handleAttendantWhenPresent","newDanceMoves","get","querySnapshot","forEach","data","includes","getMemberNewDanceMoves","REMOVE_DANCE_MOVES_FROM_ATTENDANT","removeDanceMovesFromMember","handleAttendantWhenAbsent","handleToggleAttendant","ADD_MEMBER","EDIT_MEMBER","DISABLE_MEMBER","RESTORE_MEMBER","SORT_MEMBERS","addMember","newMember","membersActions_objectSpread","monthsAfterRegistration","isDisabled","payments","hasPaid","memberId","createPayer","newPayer","addPayer","editMember","updatedMember","updatedPayer","paymentListActions_objectSpread","editPayer","possibleAttendantsArr","attendantBeingEdited","possibleAttendant","updatedPossibleAttendants","editAttendant","disableMember","disablePayer","restoreMember","restorePayer","RegistrationPage","getMemberValues","handleAddMember","createMember","gender","foundOutFrom","Container","fluid","disabled","Profile","getEditingValues","addNewDanceMove","updatedProfile","profile_objectSpread","validatedNewDanceMove","validateNewDanceMove","toConsumableArray","deleteSelectedDanceMove","selectedDanceMove","updatedProfileDanceMovesAfterDeletion","profile","handleDisable","selected","ListGroup","index","ListGroupItem","style","background","border","ProfilePage","PaymentPage","componentDidMount","setCurrentMonth","currentMonthIndex","currentMonth","getSelectedMonth","handleTogglePayment","selectedPayer","getSelectedPayer","selectedPayment","getSelectedPayment","togglePayment","paymentList","payer","payment","Check","checked","MembersPage","handleSorting","sortMembers","renderMemberList","sortingCriterium","Schedule","updatedSchedule","schedule_objectSpread","validateDanceMove","editSchedule","indexOfSelectedDanceMove","updatedDanceMoves","deleteSchedule","ADD_SCHEDULE","EDIT_SCHEDULE","DELETE_SCHEDULE","addSchedule","scheduleListActions_objectSpread","attendance","addAttendance","deleteAttendance","updatedAttendanceWithFirebaseId","editAttendance","SchedulePage","getScheduleValues","schedulePage_objectSpread","handleAddSchedule","validatedSchedule","hasScheduleBeenAdded","validateSchedule","scheduleList","createSchedule","cancelEditingSchedule","multiple","components_schedule","Attendance","selectedAttendantId","selectedAttendanceId","AttendancePage","selectedAttendance","getSelectedAttendance","selectedAttendant","getSelectedAttendant","attendanceList","components_attendance","App","react_router","path","render","schedulePage","danceMovePage","groupListPage","registrationPage","routeProps","profilePage","paymentPage","membersPage","attendancePage","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","rootReducer","combineReducers","arguments","undefined","action","memberListReducer_objectSpread","paymentListReducer_objectSpread","firestoreReducer","persistedState","localStorage","getItem","JSON","parse","store","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","createStore","applyMiddleware","thunk","withExtraArgument","getFirestore","getFirebase","reduxFirestore","firebaseConfig","reactReduxFirebase","subscribe","setItem","stringify","ReactDOM","es","src_App_0","document","getElementById","URL","process","href","origin","addEventListener","fetch","response","contentType","headers","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.238e4ffa.chunk.js","sourcesContent":["import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { Navbar, Nav, NavItem } from 'react-bootstrap';\r\n\r\nexport default function Navigation() {\r\n    return (\r\n        <Navbar collapseOnSelect expand=\"lg\" bg=\"light\" variant=\"dark\">\r\n            <Navbar.Brand>\r\n                <NavLink className=\"navigation__link logo\" to=\"/\">\r\n                    <img src=\"../../agua-36-36.png\" className=\"d-inline-block align-middle\" alt=\"logo\" />\r\n                </NavLink>\r\n            </Navbar.Brand>\r\n            <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n            <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n                <Nav className=\"ml-auto navigation--custom\">\r\n                    <NavItem>\r\n                        <NavLink exact activeClassName=\"active-link\" className=\"navigation__link\" to=\"/\">Schedule page</NavLink>\r\n                    </NavItem>\r\n                    <NavItem>\r\n                        <NavLink exact activeClassName=\"active-link\" className=\"navigation__link\" to=\"/dance-move-page\">Dance page</NavLink>\r\n                    </NavItem>\r\n                    <NavItem>\r\n                        <NavLink exact activeClassName=\"active-link\" className=\"navigation__link\" to=\"/group-list-page\">Group page</NavLink>\r\n                    </NavItem>\r\n                    <NavItem>\r\n                        <NavLink exact activeClassName=\"active-link\" className=\"navigation__link\" to=\"/registration-page\">Registration page</NavLink>\r\n                    </NavItem>\r\n                    <NavItem>\r\n                        <NavLink exact activeClassName=\"active-link\" className=\"navigation__link\" to=\"/profile-page\">Profile page</NavLink>\r\n                    </NavItem>\r\n                    <NavItem>\r\n                        <NavLink exact activeClassName=\"active-link\" className=\"navigation__link\" to=\"/payment-page\">Payment page</NavLink>\r\n                    </NavItem>\r\n                    <NavItem>\r\n                        <NavLink exact activeClassName=\"active-link\" className=\"navigation__link\" to=\"/members-page\">Members page</NavLink>\r\n                    </NavItem>\r\n                    <NavItem>\r\n                        <NavLink exact activeClassName=\"active-link\" className=\"navigation__link\" to=\"/attendance-page\">Attendance page</NavLink>\r\n                    </NavItem>\r\n                </Nav>\r\n            </Navbar.Collapse>\r\n        </Navbar>\r\n    )\r\n}","import React from 'react';\r\nimport { Form, Button } from 'react-bootstrap';\r\n\r\nclass DanceMove extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            editingMode: false,\r\n            danceMove: this.props.danceMove,\r\n            updatedDanceMove: this.props.danceMove\r\n        };\r\n    }\r\n\r\n    componentWillReceiveProps(props) {\r\n        this.setState({ danceMove: props.danceMove, updatedDanceMove: props.danceMove });\r\n    }\r\n\r\n    getEditingValue = (type, event) => {\r\n        this.setState({ updatedDanceMove: { ...this.state.updatedDanceMove, [type]: event.target.value } });\r\n    }\r\n\r\n    handleCancel = () => {\r\n        this.setState({ editingMode: false, updatedDanceMove: this.state.danceMove });\r\n    }\r\n\r\n    handleSave = event => {\r\n        event.preventDefault();\r\n        this.setState({ editingMode: false });\r\n        this.props.editDanceMove(this.state.updatedDanceMove.id, this.state.updatedDanceMove);\r\n    }\r\n\r\n    handleEdit = event => {\r\n        event.preventDefault();\r\n        this.setState({ editingMode: true });\r\n    }\r\n\r\n    handleDelete = () => {\r\n        this.props.deleteDanceMove(this.state.danceMove.id);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <tr id={this.state.updatedDanceMove.id} key={this.state.updatedDanceMove.id}>\r\n                {\r\n                    this.state.editingMode ?\r\n                        <>\r\n                            <td>\r\n                                <Form.Control type='text' value={this.state.updatedDanceMove.name} onChange={event => this.getEditingValue('name', event)} />\r\n                            </td>\r\n                            <td>\r\n                                <Form.Label column sm={{ span: 3, offset: 2 }} htmlFor={this.state.updatedDanceMove.id}>Difficulty</Form.Label>\r\n                            </td>\r\n                            <td>\r\n                                <Form.Control as='select' id={this.state.updatedDanceMove.id} value={this.state.updatedDanceMove.difficulty} onChange={event => this.getEditingValue('difficulty', event)}>\r\n                                    <option value=\"beginner\">beginner</option>\r\n                                    <option value=\"intermidiate\">intermidiate</option>\r\n                                    <option value=\"advanced\">advanced</option>\r\n                                </Form.Control>\r\n                            </td>\r\n                            <td>\r\n                                <Button variant='success'id={this.state.updatedDanceMove.id} onClick={this.handleSave}>Save</Button>\r\n                            </td>\r\n                            <td>\r\n                                <Button variant='warning'id={this.state.updatedDanceMove.id} onClick={this.handleCancel}>Cancel</Button>\r\n                            </td>\r\n                        </>\r\n                        :\r\n                        <>\r\n                            <td>{this.state.danceMove.name}</td>\r\n                            <td>{this.state.danceMove.difficulty}</td>\r\n                            <td>\r\n                                <Button variant='warning' id={this.state.danceMove.id} onClick={this.handleEdit}>Edit</Button>\r\n                            </td>\r\n                            <td>\r\n                                <Button variant='danger' id={this.state.danceMove.id} onClick={this.handleDelete}>Delete</Button>\r\n                            </td>\r\n                        </>\r\n                }\r\n            </tr>\r\n        )\r\n    }\r\n}\r\n\r\nexport default DanceMove;","import firebase from \"firebase/app\";\r\nimport 'firebase/firestore';\r\n\r\nexport var firebaseConfig = {\r\n  apiKey: \"AIzaSyDxVYW4cXJqGtwr_M_zH-1NQZjKI8bFVts\",\r\n  authDomain: \"salsa-react.firebaseapp.com\",\r\n  databaseURL: \"https://salsa-react.firebaseio.com\",\r\n  projectId: \"salsa-react\",\r\n  storageBucket: \"\",\r\n  messagingSenderId: \"173610295926\",\r\n  appId: \"1:173610295926:web:25c86e54b3cd9842\"\r\n};\r\n// Initialize Firebase\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\nexport const db = firebase.firestore();\r\n\r\n\r\nexport default firebase;","import { db } from '../config/firebase';\r\n\r\nexport const ADD_DANCE_MOVE = 'ADD_DANCE_MOVE';\r\nexport const EDIT_DANCE_MOVE = 'EDIT_DANCE_MOVE';\r\nexport const DELETE_DANCE_MOVE = 'DELETE_DANCE_MOVE';\r\n\r\nexport const addDanceMove = newDanceMove => dispatch => {\r\n    db.collection('danceList').add({\r\n        ...newDanceMove\r\n    }).then(docRef => {\r\n        dispatch({ type: ADD_DANCE_MOVE, payload: { newDanceMove, id: docRef.id } });\r\n    }).catch((error) => console.log(error))\r\n};\r\n\r\nexport const deleteDanceMove = id => dispatch => {\r\n    db.collection('danceList').doc(id).delete().then(() => {\r\n        dispatch({ type: DELETE_DANCE_MOVE, payload: { id } });\r\n    }).catch((error) => console.log(error));\r\n};\r\n\r\nexport const editDanceMove = (id, updatedDanceMove) => dispatch => {\r\n    db.collection('danceList').doc(id).update({\r\n        ...updatedDanceMove\r\n    }).then(() => {\r\n        dispatch({ type: EDIT_DANCE_MOVE, payload: { id, updatedDanceMove } });\r\n    }).catch((error) => console.log(error));\r\n};\r\n","export function getElementIfNotOnList(list, element) {\r\n    if (list.length && findElement(list, element)) {\r\n        alert(`${element.name} has been added`);\r\n    } else {\r\n        return element;\r\n    }\r\n}\r\n\r\nfunction findElement(list, element) {\r\n    return list.find(listElement => listElement.name === element.name);\r\n}\r\n\r\nexport function validateSchedule(list, element) {\r\n    if (list.length && hasScheduleBeenAdded(list, element)) {\r\n        alert(`Schedule for ${element.group} on ${element.date} has been created`);\r\n    } else {\r\n        return element;\r\n    }\r\n}\r\n\r\nfunction hasScheduleBeenAdded(list, element) {\r\n    return list.find(listElement => listElement.group === element.group && listElement.date === element.date);\r\n}","import React from 'react';\r\nimport DanceMove from './danceMove';\r\nimport { connect } from 'react-redux';\r\nimport { addDanceMove, editDanceMove, deleteDanceMove } from '../actions/danceListActions';\r\nimport { Form, Button, Table, Row, Col } from 'react-bootstrap';\r\nimport { firestoreConnect } from 'react-redux-firebase';\r\nimport { compose } from 'redux';\r\nimport { getElementIfNotOnList } from '../helpers/validation';\r\n\r\nclass DanceMovePage extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            name: '',\r\n            difficulty: '',\r\n            danceList: this.props.danceList\r\n        }\r\n    }\r\n\r\n    componentWillReceiveProps = props => {\r\n        this.setState({ danceList: props.danceList });\r\n    }\r\n\r\n    handleDanceMove = (type, event) => {\r\n        this.setState({ [type]: event.target.value });\r\n    }\r\n\r\n    handleAddDanceMove = event => {\r\n        event.preventDefault();\r\n        this.addDanceMove();\r\n        this.clearState();\r\n    }\r\n\r\n    addDanceMove = () => {\r\n        const newDanceMove = getElementIfNotOnList(this.props.danceList, this.createDanceMove());\r\n        if (newDanceMove) {\r\n            this.props.addDanceMove(newDanceMove);\r\n        }\r\n    }\r\n\r\n    createDanceMove = () => {\r\n        return Object.assign({}, { name: this.state.name, difficulty: this.state.difficulty });\r\n    }\r\n\r\n    clearState = () => {\r\n        this.setState({ name: '', difficulty: '' });\r\n    }\r\n\r\n    sortDanceMoves = event => {\r\n        const sortedDanceList = this.sortDanceMovesBySelectedValue(event.target.value);\r\n        this.setState({ danceList: sortedDanceList });\r\n    }\r\n\r\n    sortDanceMovesBySelectedValue = selectedValue => {\r\n        const danceListCopy = Array.from(this.state.danceList);\r\n        return danceListCopy.sort((a, b) => a[selectedValue] > b[selectedValue] ? 1 : -1);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <h2 className=\"heading heading--secondary\">Dance List</h2>\r\n                <Form onSubmit={this.handleAddDanceMove}>\r\n                    <Form.Group as={Row}>\r\n                        <Col sm={{ span: 3, offset: 4 }}>\r\n                            <Form.Control type=\"text\" placeholder=\"Add a dance move\" value={this.state.name} onChange={event => this.handleDanceMove('name', event)} required />\r\n                        </Col>\r\n                        <Col sm={{ span: 2, offset: 0 }}>\r\n                            <Form.Control className=\"dance-list-select\" as='select' value={this.state.difficulty} onChange={event => this.handleDanceMove('difficulty', event)} required>\r\n                                <option value=\"\">Pick difficulty</option>\r\n                                <option value=\"beginner\">beginner</option>\r\n                                <option value=\"intermediate\">intermediate</option>\r\n                                <option value=\"advanced\">advanced</option>\r\n                            </Form.Control>\r\n                        </Col>\r\n                        <Button className=\"dance-list-button\" variant='success' type='submit'>Confirm</Button>\r\n                    </Form.Group>\r\n                </Form>\r\n                {\r\n                    this.props.danceList && this.props.danceList.length ?\r\n                        <>\r\n                            <Form.Group as={Row}>\r\n                                <Form.Label column sm={{ span: 1, offset: 7 }}>Sort by</Form.Label>\r\n                                <Col sm={{ span: 2 }}>\r\n                                    <Form.Control as=\"select\" onChange={this.sortDanceMoves}>\r\n                                        <option value=\"difficulty\">difficulty</option>\r\n                                        <option value=\"danceMove\">name</option>\r\n                                    </Form.Control>\r\n                                </Col>\r\n                            </Form.Group>\r\n                            <Table striped hover responsive>\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th>DanceMove</th>\r\n                                        <th>Difficulty</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    {\r\n                                        this.state.danceList.length ?\r\n                                            this.state.danceList.map(el => {\r\n                                                return <DanceMove key={el.id} danceMove={el} deleteDanceMove={this.props.deleteDanceMove} editDanceMove={this.props.editDanceMove} />\r\n                                            })\r\n                                            : null\r\n                                    }\r\n                                </tbody>\r\n                            </Table>\r\n                        </>\r\n                        : null\r\n                }\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        danceList: state.danceList\r\n    };\r\n}\r\n\r\nlet mapDispatchToProps = dispatch => ({\r\n    addDanceMove: danceMove => dispatch(addDanceMove(danceMove)),\r\n    editDanceMove: (id, updatedDanceMove) => dispatch(editDanceMove(id, updatedDanceMove)),\r\n    deleteDanceMove: id => dispatch(deleteDanceMove(id))\r\n});\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    firestoreConnect([{ collection: 'danceList' }])\r\n)(DanceMovePage);","import React from 'react';\r\nimport { Form, Button, Row, Col } from 'react-bootstrap';\r\n\r\nclass Group extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            editingMode: false,\r\n            group: this.props.group,\r\n            updatedGroup: this.props.group\r\n        };\r\n    }\r\n\r\n    componentWillReceiveProps(props) {\r\n        this.setState({ group: props.group, updatedGroup: props.group });\r\n    }\r\n\r\n    getEditingValue = (type, event) => {\r\n        this.setState({ updatedGroup: { ...this.state.updatedGroup, [type]: event.target.value } });\r\n    }\r\n\r\n    handleCancel = () => {\r\n        this.setState({ editingMode: false, updatedGroup: this.state.group });\r\n    }\r\n\r\n    handleSave = event => {\r\n        event.preventDefault();\r\n        this.setState({ editingMode: false });\r\n        this.props.editGroup(this.state.updatedGroup.id, this.state.updatedGroup);\r\n    }\r\n\r\n    handleEdit = event => {\r\n        event.preventDefault();\r\n        this.setState({ editingMode: true });\r\n    }\r\n\r\n    handleDelete = () => {\r\n        this.props.deleteGroup(this.state.group.id);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <tr id={this.state.updatedGroup.id} key={this.state.updatedGroup.id}>\r\n                {\r\n                    this.state.editingMode ?\r\n                        <>\r\n                            <td>\r\n                                <Form.Control type=\"text\" value={this.state.updatedGroup.name} onChange={event => this.getEditingValue('name', event)}/>\r\n                            </td>\r\n                            <td>\r\n                                <Button variant='success' id={this.state.updatedGroup.id} onClick={this.handleSave}>Save</Button>\r\n                            </td>\r\n                            <td>\r\n                                <Button variant='warning' id={this.state.updatedGroup.id} onClick={this.handleCancel}>Cancel</Button>\r\n                            </td>\r\n                        </>\r\n                        :\r\n                        <>\r\n                            <td>{this.state.group.name}</td>\r\n                            <td>\r\n                                <Button variant='warning' id={this.state.group.id} onClick={this.handleEdit}>Edit</Button>\r\n                            </td>\r\n                            <td>\r\n                                <Button variant='danger' id={this.state.group.id} onClick={this.handleDelete}>Delete</Button>\r\n                            </td>\r\n                        </>\r\n                }\r\n            </tr>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Group;","import { db } from '../config/firebase';\r\n\r\nexport const ADD_GROUP = 'ADD_GROUP';\r\nexport const EDIT_GROUP = 'EDIT_GROUP';\r\nexport const DELETE_GROUP = 'DELETE_GROUP';\r\n\r\nexport const addGroup = newGroup => dispatch => {\r\n    db.collection('groupList').add({\r\n        ...newGroup\r\n    }).then(docRef => {\r\n        dispatch({ type: ADD_GROUP, payload: { newGroup, id: docRef.id } });\r\n    }).catch((error) => console.log(error))\r\n};\r\n\r\nexport const deleteGroup = id => dispatch => {\r\n    db.collection('groupList').doc(id).delete().then(() => {\r\n        dispatch({ type: DELETE_GROUP, payload: { id } });\r\n    }).catch((error) => console.log(error));\r\n};\r\n\r\nexport const editGroup = (id, updatedGroup) => dispatch => {\r\n    db.collection('groupList').doc(id).update({\r\n        ...updatedGroup\r\n    }).then(() => {\r\n        dispatch({ type: EDIT_GROUP, payload: { id, updatedGroup } });\r\n    }).catch((error) => console.log(error));\r\n};\r\n\r\n\r\n","import React from 'react';\r\nimport Group from './group';\r\nimport { Form, Button, Table, Row, Col } from 'react-bootstrap';\r\nimport { connect } from 'react-redux';\r\nimport { addGroup, editGroup, deleteGroup } from '../actions/groupListActions';\r\nimport { firestoreConnect } from 'react-redux-firebase';\r\nimport { compose } from 'redux';\r\nimport { getElementIfNotOnList } from '../helpers/validation';\r\n\r\nclass GroupListPage extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            name: ''\r\n        }\r\n    }\r\n\r\n    getGroupValue = event => {\r\n        this.setState({ name: event.target.value });\r\n    }\r\n\r\n    handleAddGroup = event => {\r\n        event.preventDefault();\r\n        this.addGroup();\r\n        this.clearState();\r\n    }\r\n\r\n    addGroup = () => {\r\n        const newGroup = getElementIfNotOnList(this.props.groupList, this.createGroup());\r\n        if (newGroup) {\r\n            this.props.addGroup(newGroup);\r\n        }\r\n    }\r\n\r\n    createGroup = () => {\r\n        return Object.assign({}, { name: this.state.name });\r\n    }\r\n\r\n    clearState = () => {\r\n        this.setState({ name: '' });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <h2 className=\"heading heading--secondary\">Group List</h2>\r\n                <Form onSubmit={this.handleAddGroup}>\r\n                    <Form.Group as={Row}>\r\n                        <Col sm={{ span: 4, offset: 4 }}>\r\n                            <Form.Control type=\"text\" placeholder=\"Add a group\" value={this.state.name} onChange={this.getGroupValue} />\r\n                        </Col>\r\n                        <Button className='button--custom' variant='success' type='submit'>Confirm</Button>\r\n                    </Form.Group>\r\n                </Form>\r\n                {\r\n                    this.props.groupList.length ?\r\n                        <Table striped hover responsive>\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>Name of the group</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {\r\n                                    this.props.groupList.map(group =>\r\n                                        <Group key={group.id} group={group} editGroup={this.props.editGroup} deleteGroup={this.props.deleteGroup} />\r\n                                    )\r\n                                }\r\n                            </tbody>\r\n                        </Table>\r\n                        : null\r\n                }\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        groupList: state.groupList\r\n    };\r\n}\r\n\r\nlet mapDispatchToProps = dispatch => ({\r\n    addGroup: group => dispatch(addGroup(group)),\r\n    editGroup: (id, updatedGroup) => dispatch(editGroup(id, updatedGroup)),\r\n    deleteGroup: id => dispatch(deleteGroup(id))\r\n});\r\n\r\nexport default compose(connect(\r\n    mapStateToProps, mapDispatchToProps),\r\n    firestoreConnect([{ collection: 'groupList' }])\r\n)(GroupListPage);\r\n\r\n","export const months = ['january', 'february', 'march', 'april', 'may', 'june', 'july', 'august', 'september', 'october', 'november', 'december'];\r\n","import { db } from '../config/firebase';\r\nimport { months } from '../constants/months';\r\n\r\nexport const ADD_PAYER = 'ADD_PAYER';\r\nexport const EDIT_PAYER = 'EDIT_PAYER';\r\nexport const DISABLE_PAYER = 'DISABLE_PAYER';\r\nexport const RESTORE_PAYER = 'RESTORE_PAYER';\r\nexport const TOGGLE_PAYMENT = 'TOGGLE_PAYMENT';\r\n\r\nexport const togglePayment = updatedPayer => dispatch => {\r\n    db.collection('paymentList').doc(updatedPayer.id).update({ ...updatedPayer }).then(() =>\r\n        dispatch({ type: TOGGLE_PAYMENT, payload: { updatedPayer } })\r\n    );\r\n}\r\n\r\nexport const addPayer = (newPayer, dispatch) => {\r\n    db.collection('paymentList').add(newPayer).then(docRef =>\r\n        dispatch({ type: ADD_PAYER, payload: { newPayer, id: docRef.id } })).catch(error =>\r\n            console.log(error));\r\n}\r\n\r\nexport const createPayer = (newMember, docRef) => {\r\n    const monthsAfterRegistration = getMonthsAfterRegistration(newMember);\r\n    return Object.assign({}, { name: newMember.name, isDisabled: false, payments: monthsAfterRegistration.map(month => Object.assign({}, { month: month, hasPaid: false })), memberId: docRef.id });\r\n}\r\n\r\nexport const getMonthsAfterRegistration = member => {\r\n    const indexOfMonthOfRegistration = new Date(member.startDate).getMonth();\r\n    return months.slice(indexOfMonthOfRegistration);\r\n}\r\n\r\nexport const editPayer = (updatedMember, dispatch) => {\r\n    db.collection(\"paymentList\").get().then(querySnapshot => querySnapshot.forEach(doc => {\r\n        if (doc.data().memberId === updatedMember.id) {\r\n            const updatedPayer = Object.assign({}, { ...doc.data(), id: doc.id, name: updatedMember.name });\r\n            db.collection('paymentList').doc(doc.id).update(updatedPayer).then(() =>\r\n                dispatch({ type: EDIT_PAYER, payload: { id: doc.id, updatedPayer } })\r\n            );\r\n        }\r\n    }));\r\n}\r\n\r\nexport const disablePayer = (memberId, dispatch) => {\r\n    db.collection(\"paymentList\").get().then(querySnapshot => querySnapshot.forEach(doc => {\r\n        if (doc.data().memberId === memberId) {\r\n            db.collection('paymentList').doc(doc.id).update({ isDisabled: true }).then(() =>\r\n                dispatch({ type: DISABLE_PAYER, payload: { id: doc.id } })\r\n            );\r\n        }\r\n    }));\r\n}\r\n\r\nexport const restorePayer = (memberId, dispatch) => {\r\n    db.collection(\"paymentList\").get().then(querySnapshot => querySnapshot.forEach(doc => {\r\n        if (doc.data().memberId === memberId) {\r\n            db.collection('paymentList').doc(doc.id).update({ isDisabled: false }).then(() =>\r\n                dispatch({ type: RESTORE_PAYER, payload: { id: doc.id } })\r\n            );\r\n        }\r\n    }));\r\n}","import { db } from '../config/firebase';\r\nimport { months } from '../constants/months';\r\nimport { ADD_DANCE_MOVES_TO_ATTENDANT, REMOVE_DANCE_MOVES_FROM_ATTENDANT } from '../actions/membersActions';\r\n\r\nexport const ADD_ATTENDANCE = 'ADD_ATTENDANCE';\r\nexport const EDIT_ATTENDANCE = 'EDIT_ATTENDANCE';\r\nexport const DELETE_ATTENDANCE = 'DELETE_ATTENDANCE';\r\nexport const TOGGLE_ATTENDANT = 'TOGGLE_ATTENDANT';\r\nexport const EDIT_ATTENDANT = 'EDIT_ATTENDANT';\r\n\r\nexport const addAttendance = (attendance, dispatch) => {\r\n    db.collection('attendanceList').add({ ...attendance }).then(docRef => \r\n        dispatch({ type: ADD_ATTENDANCE, payload: { attendance, id: docRef.id } }));\r\n}\r\n\r\nexport const createAttendance = (schedule, getState, scheduleId) => {\r\n    const month = months[new Date(schedule.date).getMonth()];\r\n    const memberList = getState().memberList;\r\n    const possibleAttendants = getPossibleAttendants(memberList, schedule);\r\n    return Object.assign({}, { ...schedule, month, possibleAttendants, scheduleId });\r\n}\r\n\r\nexport const getPossibleAttendants = (list, schedule) => {\r\n    return list.filter(member => getAvailableMembers(member, schedule))\r\n        .map(availableMember => createPossibleAttendants(availableMember, schedule));\r\n}\r\n\r\nexport const getAvailableMembers = (member, schedule) => {\r\n    const scheduleDate = new Date(schedule.date);\r\n    const memberStartDate = new Date(member.startDate);\r\n    if (member.group === schedule.group && memberStartDate <= scheduleDate) {\r\n        return member;\r\n    }\r\n}\r\n\r\nexport const createPossibleAttendants = (member, schedule) => {\r\n    return Object.assign({}, { name: member.name, id: member.id, date: schedule.date, hasAttended: false });\r\n}\r\n\r\nexport const deleteAttendance = (id, dispatch) => {\r\n    db.collection(\"attendanceList\").get().then(querySnapshot => querySnapshot.forEach(doc => {\r\n        if (doc.data().scheduleId === id) {\r\n            db.collection('attendanceList').doc(doc.id).delete().then(() => {\r\n                dispatch({ type: DELETE_ATTENDANCE, payload: { id: doc.id } });\r\n            })\r\n        }\r\n    }));\r\n}\r\n\r\nexport const editAttendant = (updatedMember, dispatch) => {\r\n    db.collection(\"attendanceList\").get().then(querySnapshot => querySnapshot.forEach(doc => {\r\n        const possibleAttendantsArr = Array.from(doc.data().possibleAttendants);\r\n        const attendantBeingEdited = possibleAttendantsArr.find(possibleAttendant => possibleAttendant.id === updatedMember.id);\r\n        if (attendantBeingEdited) {\r\n            const updatedAttendant = Object.assign({}, { ...attendantBeingEdited, name: updatedMember.name });\r\n            const updatedPossibleAttendants = possibleAttendantsArr.map(possibleAttendant => possibleAttendant.id === updatedAttendant.id ? updatedAttendant : possibleAttendant);\r\n            const updatedAttendance = Object.assign({}, {...doc.data(), possibleAttendants: updatedPossibleAttendants });\r\n            db.collection('attendanceList').doc(doc.id).update(updatedAttendance).then(() => {\r\n                dispatch({ type: EDIT_ATTENDANT, payload: { updatedAttendance }});\r\n            });\r\n        }\r\n    }));\r\n}\r\n\r\nexport const editAttendance = (updatedAttendance, dispatch) => {\r\n    db.collection(\"attendanceList\").get().then(querySnapshot => querySnapshot.forEach(doc => {\r\n        if (doc.data().scheduleId === updatedAttendance.id) {\r\n            const updatedAttendanceWithFirebaseId = Object.assign({}, { ...updatedAttendance, id: doc.id });\r\n            db.collection('attendanceList').doc(doc.id).update({ ...updatedAttendance }).then(() => {\r\n                dispatch({ type: EDIT_ATTENDANCE, payload: { id: doc.id, updatedAttendance: updatedAttendanceWithFirebaseId } });\r\n            })\r\n        }\r\n    }));\r\n}\r\n\r\nexport const toggleAttendant = (updatedAttendance, updatedAttendant) => dispatch => { handleToggleAttendant(updatedAttendance, updatedAttendant, dispatch) };\r\n\r\nfunction handleToggleAttendant(updatedAttendance, updatedAttendant, dispatch) {\r\n    updatedAttendant.hasAttended ? handleAttendantWhenPresent(updatedAttendance, updatedAttendant, dispatch) : handleAttendantWhenAbsent(updatedAttendance, updatedAttendant, dispatch);\r\n}\r\n\r\nfunction handleAttendantWhenPresent(updatedAttendance, updatedAttendant, dispatch) {\r\n    setAttendantPresence(updatedAttendance, dispatch).then(() =>\r\n        addDanceMovesToMember(updatedAttendant, updatedAttendance, dispatch));\r\n}\r\n\r\nfunction setAttendantPresence(updatedAttendance, dispatch) {\r\n    return db.collection('attendanceList').doc(updatedAttendance.id).update(updatedAttendance).then(() => {\r\n        dispatch({ type: TOGGLE_ATTENDANT, payload: { updatedAttendance } });\r\n    });\r\n}\r\n\r\nfunction addDanceMovesToMember(updatedAttendant, updatedAttendance, dispatch) {\r\n    db.collection('memberList').doc(updatedAttendant.id).update({\r\n        danceMoves: updatedAttendance.danceMoves\r\n    }).then(() => {\r\n        dispatch({ type: ADD_DANCE_MOVES_TO_ATTENDANT, payload: { attendant: updatedAttendant, danceMoves: updatedAttendance.danceMoves } });\r\n    });\r\n}\r\n\r\nfunction handleAttendantWhenAbsent(updatedAttendance, updatedAttendant, dispatch) {\r\n    setAttendantPresence(updatedAttendance, dispatch).then(() =>\r\n        removeDanceMovesFromMember(updatedAttendant, updatedAttendance, dispatch));\r\n}\r\n\r\n\r\nfunction removeDanceMovesFromMember(updatedAttendant, updatedAttendance, dispatch) {\r\n    const newDanceMoves = getMemberNewDanceMoves(updatedAttendant, updatedAttendance);\r\n    db.collection('memberList').doc(updatedAttendant.id).update({\r\n        danceMoves: newDanceMoves\r\n    }).then(() => {\r\n        dispatch({ type: REMOVE_DANCE_MOVES_FROM_ATTENDANT, payload: { attendant: updatedAttendant, danceMoves: updatedAttendance.danceMoves } });\r\n    });\r\n}\r\n\r\nfunction getMemberNewDanceMoves(updatedAttendant, updatedAttendance) {\r\n    let newDanceMoves = [];\r\n    db.collection('memberList').get().then(querySnapshot =>\r\n        querySnapshot.forEach(doc => {\r\n            if (doc.id === updatedAttendant.id) {\r\n                newDanceMoves = doc.data().danceMoves.filter(danceMove => !updatedAttendance.danceMoves.includes(danceMove));\r\n            }\r\n        })\r\n    );\r\n    return newDanceMoves;\r\n}","import { db } from '../config/firebase';\r\nimport { addPayer, createPayer, editPayer, disablePayer, restorePayer } from './paymentListActions';\r\nimport { editAttendant } from './attendanceListActions';\r\n\r\nexport const ADD_MEMBER = 'ADD_MEMBER';\r\nexport const EDIT_MEMBER = 'EDIT_MEMBER';\r\nexport const DISABLE_MEMBER = 'DISABLE_MEMBER';\r\nexport const RESTORE_MEMBER = 'RESTORE_MEMBER';\r\nexport const SORT_MEMBERS = 'SORT_MEMBERS';\r\n\r\nexport const ADD_DANCE_MOVES_TO_ATTENDANT = 'ADD_DANCE_MOVES_TO_ATTENDANT';\r\nexport const REMOVE_DANCE_MOVES_FROM_ATTENDANT = 'REMOVE_DANCE_MOVES_FROM_ATTENDANT';\r\n\r\nexport const addMember = newMember => dispatch => {\r\n    db.collection('memberList').add({ ...newMember }).then(docRef => {\r\n        dispatch({ type: ADD_MEMBER, payload: { newMember, id: docRef.id } });\r\n        return  createPayer(newMember, docRef);\r\n        }).then(newPayer => addPayer(newPayer, dispatch));\r\n};\r\n\r\nexport const editMember = (id, updatedMember) => dispatch => {\r\n    db.collection('memberList').doc(id).update({ ...updatedMember }).then(() => {\r\n        dispatch({ type: EDIT_MEMBER, payload: { id, updatedMember } });\r\n        }).then(() => editPayer(updatedMember, dispatch)).then(() => editAttendant(updatedMember, dispatch));\r\n};\r\n\r\nexport const disableMember = id => dispatch => {\r\n    db.collection('memberList').doc(id).update({ isDisabled: true }).then(() => {\r\n        dispatch({ type: DISABLE_MEMBER, payload: { id } });\r\n        }).then(() => disablePayer(id, dispatch));\r\n};\r\n\r\nexport const restoreMember = id => dispatch => {\r\n    db.collection('memberList').doc(id).update({\r\n        isDisabled: false\r\n    }).then(() => {\r\n        dispatch({ type: RESTORE_MEMBER, payload: { id } });\r\n    }).then(() => restorePayer(id, dispatch));\r\n};\r\n\r\nexport const sortMembers = sortingCriterium => dispatch => {\r\n    dispatch({ type: SORT_MEMBERS, payload: { sortingCriterium } });\r\n}\r\n\r\nexport const addDanceMovesToAttendant = (attendant, danceMoves) => dispatch => {\r\n    dispatch({ type: ADD_DANCE_MOVES_TO_ATTENDANT, payload: { attendant, danceMoves } });\r\n}\r\n\r\nexport const removeDanceMovesFromAttendant = (attendant, danceMoves) => dispatch => {\r\n    dispatch({ type: REMOVE_DANCE_MOVES_FROM_ATTENDANT, payload: { attendant, danceMoves } });\r\n}\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Form, Button, Container, Row, Col } from 'react-bootstrap';\r\nimport { connect } from 'react-redux';\r\nimport { addMember } from '../actions/membersActions';\r\nimport { firestoreConnect } from 'react-redux-firebase';\r\nimport { compose } from 'redux';\r\nimport { getElementIfNotOnList } from '../helpers/validation';\r\n\r\nclass RegistrationPage extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            name: '',\r\n            gender: '',\r\n            foundOutFrom: '',\r\n            startDate: '',\r\n            group: '',\r\n            danceMoves: [],\r\n            isDisabled: false\r\n        }\r\n    }\r\n\r\n    getMemberValues = (type, event) => {\r\n        this.setState({ [type]: event.target.value });\r\n    }\r\n\r\n    handleAddMember = event => {\r\n        event.preventDefault();\r\n        this.addMember();\r\n        this.clearState();\r\n    }\r\n\r\n    addMember = () => {\r\n        const newMember = getElementIfNotOnList(this.props.memberList, this.createMember());\r\n        if (newMember) {\r\n            this.props.addMember(newMember);\r\n        }\r\n    }\r\n\r\n    createMember = () => {\r\n        return Object.assign({}, this.state);\r\n    }\r\n\r\n    clearState = () => {\r\n        this.setState({ name: '', gender: '', foundOutFrom: '', startDate: '', group: '' });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            this.props.groupList.length ? \r\n            <Container fluid>\r\n                <h2 className=\"heading heading--secondary\">Add a member</h2>\r\n                <Form onSubmit={this.handleAddMember}>\r\n                    <Form.Group as={Row}>\r\n                        <Form.Label htmlFor=\"input-name\" column sm={{ span: 2, offset: 3 }}>Name</Form.Label>\r\n                        <Col sm={{ span: 4 }}>\r\n                            <Form.Control type=\"text\" id=\"input-name\" placeholder=\"Name\" value={this.state.name} onChange={event => this.getMemberValues('name', event)} required />\r\n                        </Col>\r\n                    </Form.Group>\r\n                    <Form.Group as={Row}>\r\n                        <Form.Label htmlFor=\"input-gender\" column sm={{ span: 2, offset: 3 }}>Gender</Form.Label>\r\n                        <Col sm={{ span: 4 }}>\r\n                            <Form.Control as=\"select\" id=\"input-gender\" value={this.state.gender} onChange={event => this.getMemberValues('gender', event)} required>\r\n                                <option value=\"\">Pick a gender</option>\r\n                                <option value=\"male\">Male</option>\r\n                                <option value=\"female\">Female</option>\r\n                            </Form.Control>\r\n                        </Col>\r\n                    </Form.Group>\r\n                    <Form.Group as={Row}>\r\n                        <Form.Label htmlFor=\"input-found-out-from\" column sm={{ span: 2, offset: 3 }}>Found out from</Form.Label>\r\n                        <Col sm={{ span: 4 }}>\r\n                            <Form.Control type=\"text\" id=\"input-found-out-from\" placeholder=\"Found out from\" value={this.state.foundOutFrom} onChange={event => this.getMemberValues('foundOutFrom', event)} required />\r\n                        </Col>\r\n                    </Form.Group>\r\n                    <Form.Group as={Row}>\r\n                        <Form.Label htmlFor=\"input-date\" column sm={{ span: 2, offset: 3 }}>Start Date</Form.Label>\r\n                        <Col sm={{ span: 4 }}>\r\n                            <Form.Control type=\"date\" id=\"input-date\" placeholder=\"Start date\" value={this.state.startDate} onChange={event => this.getMemberValues('startDate', event)} required />\r\n                        </Col>\r\n                    </Form.Group>\r\n                    <Form.Group as={Row}>\r\n                        <Form.Label htmlFor=\"input-group\" column sm={{ span: 2, offset: 3 }}>Group</Form.Label>\r\n                        <Col sm={{ span: 4}}>\r\n                            <Form.Control as=\"select\" id=\"input-group\" value={this.state.group} onChange={event => this.getMemberValues('group', event)} required>\r\n                                <option disabled value=\"\">Pick a group</option>\r\n                                {this.props.groupList.map(group => <option key={group.id}>{group.name}</option>)}\r\n                            </Form.Control>\r\n                        </Col>\r\n                    </Form.Group>\r\n                    <Button variant='success' type='submit'>Confirm</Button>\r\n                </Form>\r\n            </Container>\r\n            : \r\n            <div className=\"instructions\">\r\n                <Link to=\"/group-list-page\">Click to create a group</Link>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        memberList: state.memberList,\r\n        groupList: state.groupList\r\n    };\r\n}\r\n\r\nlet mapDispatchToProps = dispatch => ({\r\n    addMember: member => dispatch(addMember(member)),\r\n});\r\n\r\nexport default compose(connect(\r\n    mapStateToProps, mapDispatchToProps),\r\n    firestoreConnect([ { collection: 'memberList'} ])\r\n)(RegistrationPage);\r\n","import React from 'react';\r\nimport { Form, Button, Row, Col, ListGroup, ListGroupItem } from 'react-bootstrap';\r\n\r\nclass Profile extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            editingMode: false,\r\n            profile: this.props.profile,\r\n            updatedProfile: this.props.profile\r\n        };\r\n    }\r\n\r\n    componentWillReceiveProps(props) {\r\n        this.setState({ profile: props.profile, updatedProfile: props.profile });\r\n    }\r\n\r\n    getEditingValues = (type, event) => {\r\n        type === 'danceMoves' ? this.addNewDanceMove(event) : this.setState({ updatedProfile: { ...this.state.updatedProfile, [type]: event.target.value } });\r\n    }\r\n\r\n    addNewDanceMove = event => {\r\n        const validatedNewDanceMove = this.validateNewDanceMove(event);\r\n        if (validatedNewDanceMove) {\r\n            this.setState({ updatedProfile: { ...this.state.updatedProfile, danceMoves: [...this.state.updatedProfile.danceMoves, validatedNewDanceMove] } });\r\n        }\r\n    }\r\n\r\n    validateNewDanceMove = event => {\r\n        if (!this.state.updatedProfile.danceMoves.includes(event.target.value) && event.target.value) {\r\n            return event.target.value;\r\n        }\r\n    }\r\n\r\n    deleteSelectedDanceMove = selectedDanceMove => {\r\n        const updatedProfileDanceMovesAfterDeletion = this.state.updatedProfile.danceMoves.filter(danceMove => danceMove !== selectedDanceMove);\r\n        this.setState({ updatedProfile: { ...this.state.updatedProfile, danceMoves: updatedProfileDanceMovesAfterDeletion } });\r\n    }\r\n\r\n    handleCancel = () => {\r\n        this.setState({ editingMode: false, updatedProfile: this.state.profile });\r\n    }\r\n\r\n    handleSave = event => {\r\n        event.preventDefault();\r\n        this.setState({ editingMode: false });\r\n        this.props.editMember(this.state.updatedProfile.id, this.state.updatedProfile);\r\n    }\r\n\r\n    handleEdit = event => {\r\n        event.preventDefault();\r\n        this.setState({ editingMode: true });\r\n    }\r\n\r\n    handleDisable = () => {\r\n        this.props.disableMember(this.state.profile.id);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <article key={this.state.profile.id} id={this.state.profile.id}>\r\n                {\r\n                    this.state.editingMode ?\r\n                        <Form>\r\n                            <Form.Group as={Row}>\r\n                                <Form.Label column sm={{ span: 2, offset: 3 }}>Name</Form.Label>\r\n                                <Col sm={{ span: 4 }}>\r\n                                    <Form.Control type=\"text\" value={this.state.updatedProfile.name} onChange={event => this.getEditingValues('name', event)} />\r\n                                </Col>\r\n                            </Form.Group>\r\n                            <Form.Group as={Row}>\r\n                                <Form.Label column sm={{ span: 2, offset: 3 }}>Gender</Form.Label>\r\n                                <Col sm={{ span: 4 }}>\r\n                                    <Form.Control as=\"select\" value={this.state.updatedProfile.gender} onChange={event => this.getEditingValues('gender', event)}>\r\n                                        <option value=\"male\">Male</option>\r\n                                        <option value=\"female\">Female</option>\r\n                                    </Form.Control>\r\n                                </Col>\r\n                            </Form.Group>\r\n                            <Form.Group as={Row}>\r\n                                <Form.Label column sm={{ span: 2, offset: 3 }}>Started on</Form.Label>\r\n                                <Col sm={{ span: 4 }}>\r\n                                    <Form.Control type=\"date\" value={this.state.updatedProfile.startDate} onChange={event => this.getEditingValues('startDate', event)} />\r\n                                </Col>\r\n                            </Form.Group>\r\n                            <Form.Group as={Row}>\r\n                                <Form.Label column sm={{ span: 2, offset: 3 }}>Found out from</Form.Label>\r\n                                <Col sm={{ span: 4 }}>\r\n                                    <Form.Control type=\"text\" value={this.state.updatedProfile.foundOutFrom} onChange={event => this.getEditingValues('foundOutFrom', event)} />\r\n                                </Col>\r\n                            </Form.Group>\r\n                            <Form.Group as={Row}>\r\n                                <Form.Label column sm={{ span: 2, offset: 3 }}>Group</Form.Label>\r\n                                <Col sm={{ span: 4 }}>\r\n                                    <Form.Control as=\"select\" value={this.state.updatedProfile.group} onChange={event => this.getEditingValues('group', event)}>\r\n                                        {\r\n                                            this.props.groupList.map(group =>\r\n                                                <option key={group.id} value={group.name}>{group.name}</option>\r\n                                            )\r\n                                        }\r\n                                    </Form.Control>\r\n                                </Col>\r\n                            </Form.Group>\r\n                            <Form.Group as={Row}>\r\n                                <Form.Label column sm={{ span: 2, offset: 3 }}>Dance moves</Form.Label>\r\n                                <Col sm={{ span: 4 }}>\r\n                                    <Form.Control as=\"select\" onChange={event => this.getEditingValues('danceMoves', event)}>\r\n                                        <option value='' selected disabled>Select a dance move</option>\r\n                                        {\r\n                                            this.props.danceList.map(danceMove =>\r\n                                                <option key={danceMove.id} value={danceMove.name}>{danceMove.name}</option>\r\n                                            )\r\n                                        }\r\n                                    </Form.Control>\r\n                                </Col>\r\n                            </Form.Group>\r\n                            <Form.Group>\r\n                              <ListGroup>\r\n                                    {this.state.updatedProfile.danceMoves.map((danceMove, index) =>\r\n                                        <ListGroupItem key={index}>{danceMove}\r\n                                            <Button variant=\"danger\" onClick={event => this.deleteSelectedDanceMove(danceMove, event)}>X</Button>\r\n                                        </ListGroupItem>\r\n                                    )}\r\n                                </ListGroup>\r\n                            </Form.Group>\r\n                            <Button variant='success' id={this.state.profile.id} onClick={this.handleSave}>Save</Button>\r\n                            <Button variant='warning' id={this.state.profile.id} onClick={this.handleCancel}>Cancel</Button>\r\n                        </Form>\r\n                        :\r\n                        <>\r\n                            <h3>{this.state.profile.name}</h3>\r\n                            <p>Gender {this.state.profile.gender}</p>\r\n                            <p>Started on {this.state.profile.startDate}</p>\r\n                            <p>Found out from {this.state.profile.foundOutFrom}</p>\r\n                            <p>Member of {this.state.profile.group} group</p>\r\n                            <p>Dance moves</p>\r\n                            <ListGroup>\r\n                                {\r\n                                    this.state.profile.danceMoves.length ?\r\n                                        this.state.profile.danceMoves.map((danceMove, index) =>\r\n                                            <ListGroupItem style={{ background: \"#89D0FF\", border: 0 }} key={index}>{danceMove}</ListGroupItem>\r\n                                        )\r\n                                        : <ListGroupItem style={{ background: \"#89D0FF\", border: 0 }}>{this.state.profile.name} doesn't know any dance moves yet</ListGroupItem>\r\n                                }\r\n\r\n                            </ListGroup>\r\n                            <Button variant='warning' id={this.state.profile.id} onClick={this.handleEdit}>Edit</Button>\r\n                            <Button variant='danger' id={this.state.profile.id} onClick={this.handleDisable}>Disable</Button>\r\n                        </>\r\n                }\r\n            </article>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Profile;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport Profile from './profile';\r\nimport { Button, ListGroup, ListGroupItem } from 'react-bootstrap';\r\nimport { connect } from 'react-redux';\r\nimport { editMember, disableMember, restoreMember } from '../actions/membersActions';\r\nimport { firestoreConnect } from 'react-redux-firebase';\r\nimport { compose } from 'redux';\r\n\r\nclass ProfilePage extends React.Component {\r\n    render() {\r\n        return (\r\n            this.props.memberList.length ?\r\n                <>\r\n                    <h2 className=\"heading heading--secondary\">Profile Page</h2>\r\n                    <ListGroup>\r\n                        {\r\n                            this.props.memberList.length ?\r\n                                this.props.memberList.map(member => {\r\n                                    if (member.isDisabled) {\r\n                                        return (\r\n                                            <ListGroupItem key={member.id}>{member.name}\r\n                                                <Button variant='info' onClick={() => this.props.restoreMember(member.id)}>Restore</Button>\r\n                                            </ListGroupItem>\r\n                                        )\r\n                                    } else {\r\n                                        return <Profile key={member.id} profile={member} editMember={this.props.editMember} disableMember={this.props.disableMember} memberList={this.props.memberList} groupList={this.props.groupList} danceList={this.props.danceList} />\r\n                                    }\r\n                                })\r\n                            : null\r\n                        }\r\n                    </ListGroup>\r\n                </>\r\n            :\r\n            <div className=\"instructions\">\r\n                <Link to=\"/registration-page\">Create a member first</Link>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        memberList: state.memberList,\r\n        groupList: state.groupList,\r\n        danceList: state.danceList,\r\n    };\r\n}\r\n\r\nlet mapDispatchToProps = dispatch => ({\r\n    editMember: (id, updatedMember) => dispatch(editMember(id, updatedMember)),\r\n    disableMember: id => dispatch(disableMember(id)),\r\n    restoreMember: id => dispatch(restoreMember(id))\r\n});\r\n\r\nexport default compose(connect(\r\n    mapStateToProps, mapDispatchToProps),\r\n    firestoreConnect([{ collection: 'memberList' }])\r\n)(ProfilePage);","import React from 'react';\r\nimport { Form, Table, Row, Col } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { togglePayment } from '../actions/paymentListActions';\r\nimport { connect } from 'react-redux';\r\nimport { firestoreConnect } from 'react-redux-firebase';\r\nimport { compose } from 'redux';\r\nimport { months } from '../constants/months';\r\n\r\nclass PaymentPage extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            currentMonth: ''\r\n        }\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        this.setCurrentMonth();\r\n    }\r\n\r\n    setCurrentMonth = () => {\r\n        const currentMonthIndex = new Date().getMonth();\r\n        this.setState({ currentMonth: months[currentMonthIndex] });\r\n    }\r\n\r\n    getSelectedMonth = event => {\r\n        this.setState({ currentMonth: event.target.value });\r\n    }\r\n\r\n    handleTogglePayment = event => {\r\n        const selectedPayer = this.getSelectedPayer(event);\r\n        const selectedPayment = this.getSelectedPayment(selectedPayer);\r\n        selectedPayment.hasPaid = !selectedPayment.hasPaid;\r\n        this.props.togglePayment(selectedPayer);\r\n    }\r\n\r\n    getSelectedPayer = event => {\r\n        return this.props.paymentList.find(payer => payer.id === event.target.id);\r\n    }\r\n\r\n    getSelectedPayment = selectedPayer => {\r\n        return selectedPayer.payments.find(payment => payment.month === this.state.currentMonth);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            this.props.paymentList.length ?\r\n                <>\r\n                    <h2 className=\"heading heading--secondary\">Payment Page</h2>\r\n                    <Form.Group as={Row}>\r\n                        <Col sm={{ span: 2, offset: 6 }}>\r\n                            <Form.Label>See payments for</Form.Label>\r\n                        </Col>\r\n                        <Col sm={{ span: 2 }}>\r\n                            <Form.Control as='select' value={this.state.currentMonth} onChange={this.getSelectedMonth} required>\r\n                                <option value=\"\">Pick a month</option>\r\n                                {\r\n                                    months.map((month, index) =>\r\n                                        <option key={index} value={month}>{month}</option>\r\n                                    )\r\n                                }\r\n                            </Form.Control>\r\n                        </Col>\r\n                    </Form.Group>\r\n                    <Table striped hover responsive>\r\n                        <thead>\r\n                            <tr>\r\n                                <th>Name</th>\r\n                                <th>Paid</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {\r\n                                this.props.paymentList.length ?\r\n                                    this.props.paymentList.map(payer => {\r\n                                        if (!payer.isDisabled) {\r\n                                            return (\r\n                                                <tr key={payer.id}>\r\n                                                    <td>{payer.name}</td>\r\n                                                    {\r\n                                                        payer.payments.map((payment, index) => {\r\n                                                            if (payment.month === this.state.currentMonth) {\r\n                                                                return (\r\n                                                                    <td key={index}>\r\n                                                                        <Form.Check type='checkbox' id={payer.id} checked={payment.hasPaid} onChange={event => this.handleTogglePayment(event)} />\r\n                                                                    </td>\r\n                                                                )\r\n                                                            }\r\n                                                        })\r\n                                                    }\r\n                                                </tr>\r\n                                            )\r\n                                        }\r\n                                    })\r\n                                    :\r\n                                    <div className=\"instructions\">\r\n                                        <p>Create a Member first</p>\r\n                                        <Link to=\"/registration-page\">Click to create a member</Link>\r\n                                    </div>\r\n                            }\r\n                        </tbody>\r\n                    </Table>\r\n                </>\r\n                :\r\n                <div className=\"instructions\">\r\n                    <Link to=\"/registration-page\">Create a member first</Link>\r\n                </div>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        groupList: state.groupList,\r\n        memberList: state.memberList,\r\n        paymentList: state.paymentList\r\n    };\r\n}\r\n\r\nlet mapDispatchToProps = dispatch => ({\r\n    togglePayment: payer => dispatch(togglePayment(payer))\r\n});\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    firestoreConnect([{ collection: 'paymentList' }])\r\n)(PaymentPage);","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Form, Table, Row, Col } from 'react-bootstrap';\r\nimport { connect } from 'react-redux';\r\nimport { sortMembers } from '../actions/membersActions';\r\n\r\nclass MembersPage extends React.Component {\r\n    handleSorting = event => {\r\n        this.props.sortMembers(event.target.value);\r\n    }\r\n\r\n    renderMemberList = () => {\r\n        return this.props.memberList.sort((a, b) => (a[this.props.sortingCriterium] > b[this.props.sortingCriterium]) ? 1 : -1)\r\n            .filter(member => !member.isDisabled).map(member => (\r\n                <tr key={member.id} id={member.id}>\r\n                    <td>{member.name}</td>\r\n                    <td>{member.group}</td>\r\n                    <td>{member.startDate}</td>\r\n                    <td>{member.foundOutFrom}</td>\r\n                </tr>\r\n            )\r\n        )\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            this.props.memberList.length ?\r\n                <>\r\n                    <h2 className=\"heading heading--secondary\">Members Page</h2>\r\n                    <>\r\n                        <Form.Group as={Row} className=\"justify-content-md-center\">\r\n                            <Form.Label column sm={{ span: 1, offset: 6 }} htmlFor=\"sort-members\">Sort by</Form.Label>\r\n                            <Col sm={{ span: 2 }}>\r\n                                <Form.Control as='select' id=\"sort-members\" onChange={this.handleSorting}>\r\n                                    <option value=\"group\">Group</option>\r\n                                    <option value=\"startDate\">Date</option>\r\n                                    <option value=\"name\">Name</option>\r\n                                </Form.Control>\r\n                            </Col>\r\n                        </Form.Group>\r\n                        <Table striped responsive hover>\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>Name</th>\r\n                                    <th>Group</th>\r\n                                    <th>Started on</th>\r\n                                    <th>Found out from</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {\r\n                                    this.renderMemberList()\r\n                                }\r\n                            </tbody>\r\n                        </Table>\r\n                    </>\r\n                </>\r\n                :\r\n                <div className=\"instructions\">\r\n                    <Link to=\"/add-members-page\">Create a member first</Link>\r\n                </div>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        memberList: state.memberList,\r\n        sortingCriterium: state.sortingCriterium\r\n    };\r\n}\r\n\r\nlet mapDispatchToProps = dispatch => ({\r\n    sortMembers: sortingCriterium => dispatch(sortMembers(sortingCriterium))\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(MembersPage);\r\n","import React from 'react';\r\nimport { Form, Button, Row, Col, ListGroup, ListGroupItem } from 'react-bootstrap';\r\nimport '../App.css';\r\n\r\nclass Schedule extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            editingMode: false,\r\n            schedule: this.props.schedule,\r\n            updatedSchedule: this.props.schedule,\r\n            selectedDanceMove: ''\r\n        };\r\n    }\r\n\r\n    componentWillReceiveProps(props) {\r\n        this.setState({ schedule: props.schedule, updatedSchedule: props.schedule });\r\n    }\r\n\r\n    getEditingValues = (type, event) => {\r\n        type === 'danceMoves' ? this.addDanceMove(event) : this.setState({ updatedSchedule: { ...this.state.updatedSchedule, [type]: event.target.value } });\r\n    }\r\n\r\n    addDanceMove = event => {\r\n        const newDanceMove = this.validateDanceMove(event);\r\n        if(newDanceMove) {\r\n            this.setState({ updatedSchedule: { ...this.state.updatedSchedule, danceMoves: [...this.state.updatedSchedule.danceMoves, newDanceMove] } });\r\n        }\r\n    }\r\n\r\n    validateDanceMove = event => {\r\n        if(!this.state.updatedSchedule.danceMoves.includes(event.target.value)) {\r\n            return event.target.value;\r\n        } else {\r\n            alert(`${event.target.value} already exists`);\r\n        }\r\n    }\r\n\r\n    handleCancel = () => {\r\n        this.setState({ editingMode: false, updatedSchedule: this.state.schedule });\r\n    }\r\n\r\n    handleSave = event => {\r\n        event.preventDefault();\r\n        this.setState({ editingMode: false });\r\n        this.props.editSchedule(this.state.updatedSchedule.id, this.state.updatedSchedule);\r\n    }\r\n\r\n    deleteSelectedDanceMove = indexOfSelectedDanceMove => {\r\n        const updatedDanceMoves = this.state.updatedSchedule.danceMoves.filter((danceMove, index) => index !== indexOfSelectedDanceMove);\r\n        this.setState({ updatedSchedule: Object.assign({}, { group: this.state.updatedSchedule.group, id: this.state.updatedSchedule.id, date: this.state.updatedSchedule.date, danceMoves: updatedDanceMoves }) });\r\n    }\r\n\r\n    handleEdit = event => {\r\n        event.preventDefault();\r\n        this.setState({ editingMode: true });\r\n    }\r\n\r\n    handleDelete = () => {\r\n        this.props.deleteSchedule(this.state.schedule.id);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <ListGroupItem style={{background: \"#89D0FF\", border: 0}} className=\"list-item\">\r\n                {\r\n                    this.state.editingMode ?\r\n                        <Form>\r\n                            <Form.Group as={Row}>\r\n                                <Form.Label column sm={{ span: 2, offset: 4 }} htmlFor={this.state.updatedSchedule.group}>Group</Form.Label>\r\n                                <Col sm={{ span: 4 }}>\r\n                                    <Form.Control as=\"select\" value={this.state.updatedSchedule.group} onChange={event => this.getEditingValues('group', event)}>\r\n                                        {\r\n                                            this.props.groupList.map(group =>\r\n                                                <option key={group.id} value={group.name}>{group.name}</option>\r\n                                            )\r\n                                        }\r\n                                    </Form.Control>\r\n                                </Col>\r\n                            </Form.Group>\r\n                            <Form.Group as={Row}>\r\n                                <Form.Label column sm={{ span: 2, offset: 4 }} htmlFor={this.state.updatedSchedule.date}>Date</Form.Label>\r\n                                <Col sm={{ span: 4 }}>\r\n                                    <Form.Control type=\"date\" value={this.state.updatedSchedule.date} onChange={event => this.getEditingValues('date', event)} />\r\n                                </Col>\r\n                            </Form.Group>\r\n                            <Form.Group as={Row}>\r\n                                <Form.Label column sm={{ span: 2, offset: 4 }} htmlFor={this.state.updatedSchedule.danceMoves}>Dance moves</Form.Label>\r\n                                <Col sm={{ span: 4 }}>\r\n                                    <Form.Control as=\"select\" value={this.state.selectedDanceMove} onChange={event => this.getEditingValues('danceMoves', event)}>\r\n                                        {\r\n                                            this.props.danceList.map(danceMove =>\r\n                                                <option key={danceMove.id} value={danceMove.name}>{danceMove.name}</option>\r\n                                            )\r\n                                        }\r\n                                        <option disabled value=''>Pick a dance move</option>\r\n                                    </Form.Control>\r\n                                </Col>\r\n                            </Form.Group>\r\n                            <ListGroup>\r\n                                {\r\n                                    this.state.updatedSchedule.danceMoves.map((danceMove, index) =>\r\n                                        <ListGroupItem key={index}>{danceMove}\r\n                                            <Button variant=\"danger\" onClick={index => this.deleteSelectedDanceMove(index)}>X</Button>\r\n                                        </ListGroupItem>)\r\n                                }\r\n                            </ListGroup>\r\n                            <Button variant='success' onClick={this.handleSave}>Save</Button>\r\n                            <Button variant='warning' onClick={this.handleCancel}>Cancel</Button>\r\n                        </Form>\r\n                        :\r\n                        <>\r\n                            <p>Schedule for {this.state.schedule.group} group </p>\r\n                            <p>Class is scheduled on {this.state.schedule.date}</p>\r\n                            <p>Dance moves to be practiced:</p>\r\n                            <ListGroup>\r\n                                {\r\n                                   this.state.schedule.danceMoves.map((danceMove, index) =>\r\n                                        <Col key={index} sm={{ span: 2, offset: 5}}>\r\n                                            <ListGroupItem>{danceMove}</ListGroupItem>                                        \r\n                                        </Col>\r\n                                   )\r\n                                }\r\n                            </ListGroup>\r\n                            <Button variant='warning' onClick={this.handleEdit}>Edit</Button>\r\n                            <Button variant='danger' id={this.state.schedule.id} onClick={this.handleDelete}>Delete</Button>\r\n                        </>\r\n                }\r\n            </ListGroupItem>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Schedule;","import { db } from '../config/firebase';\r\nimport { createAttendance, addAttendance, editAttendance, deleteAttendance } from './attendanceListActions';\r\n\r\nexport const ADD_SCHEDULE = 'ADD_SCHEDULE';\r\nexport const EDIT_SCHEDULE = 'EDIT_SCHEDULE';\r\nexport const DELETE_SCHEDULE = 'DELETE_SCHEDULE';\r\n\r\nexport const addSchedule = schedule => (dispatch, getState) => {\r\n    db.collection('scheduleList').add({\r\n        ...schedule\r\n    }).then(docRef => {\r\n        dispatch({ type: ADD_SCHEDULE, payload: { schedule, id: docRef.id } });\r\n        return createAttendance(schedule, getState, docRef.id);\r\n    }).then(attendance => addAttendance(attendance, dispatch));\r\n};\r\n\r\nexport const deleteSchedule = id => dispatch => {\r\n    db.collection('scheduleList').doc(id).delete().then(() => {\r\n        dispatch({ type: DELETE_SCHEDULE, payload: { id } });\r\n    }).then(() => deleteAttendance(id, dispatch));\r\n};\r\n\r\nexport const editSchedule = (id, updatedSchedule) => (dispatch, getState) => {\r\n    db.collection('scheduleList').doc(id).update({\r\n        ...updatedSchedule\r\n    }).then(() => {\r\n        dispatch({ type: EDIT_SCHEDULE, payload: { id, updatedSchedule } });\r\n        return createAttendance(updatedSchedule, getState, id);\r\n    }).then(updatedAttendance => editAttendance(updatedAttendance, dispatch));\r\n};\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport Schedule from './schedule';\r\nimport { Form, Button, Row, Col, ListGroup, ListGroupItem } from 'react-bootstrap';\r\nimport { connect } from 'react-redux';\r\nimport { addSchedule, editSchedule, deleteSchedule } from '../actions/scheduleListActions';\r\nimport { firestoreConnect } from 'react-redux-firebase';\r\nimport { compose } from 'redux';\r\nimport { validateSchedule } from '../helpers/validation';\r\n\r\nclass SchedulePage extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            schedule: {\r\n                group: '',\r\n                date: '',\r\n                danceMoves: [],\r\n                selectedDanceMove: '',\r\n            }\r\n        }\r\n    }\r\n\r\n    getScheduleValues = (type, event) => {\r\n        type === 'danceMoves' ? this.addDanceMove(event.target.value) : this.setState({ schedule: { ...this.state.schedule, [type]: event.target.value } });\r\n    }\r\n\r\n    addDanceMove(danceMove) {\r\n        const newDanceMove = this.validateDanceMove(danceMove);\r\n        if (newDanceMove) {\r\n            this.setState({ schedule: { ...this.state.schedule, danceMoves: [...this.state.schedule.danceMoves, newDanceMove] } });\r\n        }\r\n    }\r\n\r\n    validateDanceMove(danceMove) {\r\n        if (this.state.schedule.danceMoves.includes(danceMove)) {\r\n            alert(`${danceMove} has already been added`)\r\n        } else {\r\n            return danceMove;\r\n        }\r\n    }\r\n\r\n    handleAddSchedule = event => {\r\n        event.preventDefault();\r\n        this.addSchedule();\r\n        this.clearState();\r\n    }\r\n\r\n    addSchedule = () => {\r\n        const validatedSchedule = validateSchedule(this.props.scheduleList, this.createSchedule());\r\n        if (validatedSchedule) {\r\n            this.props.addSchedule(validatedSchedule);\r\n        }\r\n    }\r\n\r\n    createSchedule = () => {\r\n        return Object.assign({}, { group: this.state.schedule.group, date: this.state.schedule.date, danceMoves: this.state.schedule.danceMoves });\r\n    }\r\n\r\n    clearState = () => {\r\n        this.setState({ schedule: { group: '', date: '', danceMoves: '' } });\r\n    }\r\n\r\n    editSchedule = () => {\r\n        this.setState({ editingMode: !this.state.editingMode });\r\n    }\r\n\r\n    cancelEditingSchedule = () => {\r\n        this.setState({ editingMode: !this.state.editingMode });\r\n    }\r\n\r\n    deleteSelectedDanceMove = event => {\r\n        const updatedDanceMoves = this.state.schedule.danceMoves.filter((danceMove, index) => index !== +event.target.id);\r\n        this.setState({ schedule: { ...this.state.schedule, danceMoves: updatedDanceMoves } });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            this.props.memberList.length && this.props.danceList.length ?\r\n                <>\r\n                    <h2 className=\"heading heading--secondary\">Schedule Page</h2>\r\n                    <Form onSubmit={this.handleAddSchedule}>\r\n                        <Form.Group as={Row}>\r\n                            <Form.Label column sm={{ span: 2, offset: 4 }}>Group</Form.Label>\r\n                            <Col sm={{ span: 4 }}>\r\n                                <Form.Control as=\"select\" value={this.state.schedule.group} onChange={event => this.getScheduleValues('group', event)} multiple={false} required>\r\n                                    <option value=\"\">Pick a group</option>\r\n                                    {\r\n                                        this.props.groupList.map(group =>\r\n                                            <option key={group.id} value={group.name}>{group.name}</option>\r\n                                        )\r\n                                    }\r\n                                </Form.Control>\r\n                            </Col>\r\n                        </Form.Group>\r\n                        <Form.Group as={Row}>\r\n                            <Form.Label column sm={{ span: 2, offset: 4 }}>Date</Form.Label>\r\n                            <Col sm={{ span: 4 }}>\r\n                                <Form.Control type=\"date\" value={this.state.schedule.date} onChange={event => this.getScheduleValues('date', event)} required />\r\n                            </Col>\r\n                        </Form.Group>\r\n                        <Form.Group as={Row}>\r\n                            <Form.Label column sm={{ span: 2, offset: 4 }}>Dance moves</Form.Label>\r\n                            <Col sm={{ span: 4 }}>\r\n                                <Form.Control as='select' value={this.state.schedule.selectedDanceMove} onChange={event => this.getScheduleValues('danceMoves', event)} multiple={false} required>\r\n                                    {\r\n                                        this.props.danceList.map(danceMove =>\r\n                                            <option key={danceMove.id} value={danceMove.name}>{danceMove.name}</option>\r\n                                        )\r\n                                    }\r\n                                    <option value=\"\" disabled>Pick dance moves</option>\r\n                                </Form.Control>\r\n                            </Col>\r\n                        </Form.Group>\r\n                        {\r\n                            this.state.schedule.danceMoves.length ?\r\n                                <div>\r\n                                    <p>List of new dance moves: </p>\r\n                                    <ListGroup>\r\n                                        {this.state.schedule.danceMoves.map((danceMove, index) => {\r\n                                            return (\r\n                                                <ListGroupItem key={index}>\r\n                                                    {danceMove}\r\n                                                    <Button variant=\"danger\" id={index} onClick={this.deleteSelectedDanceMove}>X</Button>\r\n                                                </ListGroupItem>\r\n                                            )\r\n                                        })\r\n                                        }\r\n                                    </ListGroup>\r\n                                </div>\r\n                                : null\r\n                        }\r\n\r\n                        <Button variant=\"success\" type=\"submit\">\r\n                            Create schedule\r\n                    </Button>\r\n                    </Form>\r\n                    <ListGroup>\r\n                        {\r\n                            this.props.scheduleList.map(schedule =>\r\n                                <Schedule key={schedule.id} groupList={this.props.groupList} danceList={this.props.danceList} schedule={schedule} editingMode={this.state.editingMode} editSchedule={this.props.editSchedule} deleteSchedule={this.props.deleteSchedule} />\r\n                            )\r\n                        }\r\n                    </ListGroup>\r\n                </>\r\n                :\r\n                    <div className=\"instructions\">\r\n                        <div>\r\n                            <Link to=\"/dance-move-page\">Click to create a dance list</Link>\r\n                        </div>\r\n                        <div>\r\n                            <Link to=\"/registration-page\">Click to create a member</Link>\r\n                        </div>\r\n                    </div>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        groupList: state.groupList,\r\n        danceList: state.danceList,\r\n        memberList: state.memberList,\r\n        scheduleList: state.scheduleList\r\n    };\r\n}\r\n\r\nlet mapDispatchToProps = dispatch => ({\r\n    addSchedule: schedule => dispatch(addSchedule(schedule)),\r\n    editSchedule: (id, updatedSchedule) => dispatch(editSchedule(id, updatedSchedule)),\r\n    deleteSchedule: id => dispatch(deleteSchedule(id))\r\n});\r\n\r\nexport default compose(connect(\r\n    mapStateToProps, mapDispatchToProps),\r\n    firestoreConnect([{ collection: 'scheduleList' }])\r\n)(SchedulePage);","import React from 'react';\r\n\r\nclass Attendance extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            attendance: this.props.attendance,\r\n            updatedAttendance: this.props.attendance\r\n        };\r\n    }\r\n\r\n    componentWillReceiveProps(props) {\r\n        this.setState({ attendance: props.attendance, updatedAttendance: props.attendance });\r\n    }\r\n\r\n    toggleAttendant = (selectedAttendantId, selectedAttendanceId) => {\r\n        this.props.toggleAttendant(selectedAttendantId, selectedAttendanceId);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n                this.state.attendance.possibleAttendants.map(possibleAttendant =>\r\n                    <tr id={possibleAttendant.id} key={possibleAttendant.id}>\r\n                        <td>\r\n                            {possibleAttendant.name}\r\n                        </td>\r\n                        <td>\r\n                            {this.state.attendance.group}\r\n                        </td>\r\n                        <td>\r\n                            {this.state.attendance.date}\r\n                        </td>\r\n                        <td>\r\n                            <input type=\"checkbox\" checked={possibleAttendant.hasAttended} onChange={() => this.toggleAttendant(possibleAttendant.id, this.state.attendance.id)} />\r\n                        </td>\r\n                    </tr>\r\n                )\r\n             )\r\n        }\r\n}\r\n\r\nexport default Attendance;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport Attendance from './attendance';\r\nimport { Form, Table, Row, Col } from 'react-bootstrap';\r\nimport { connect } from 'react-redux';\r\nimport { firestoreConnect } from 'react-redux-firebase';\r\nimport { compose } from 'redux';\r\nimport { toggleAttendant } from '../actions/attendanceListActions';\r\nimport { months } from '../constants/months';\r\n\r\nclass AttendancePage extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            currentMonth: ''\r\n        }\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        this.setCurrentMonth();\r\n    }\r\n\r\n    setCurrentMonth = () => {\r\n        const currentMonthIndex = new Date().getMonth();\r\n        this.setState({ currentMonth: months[currentMonthIndex] });\r\n    }\r\n\r\n    getSelectedMonth = event => {\r\n        this.setState({ currentMonth: event.target.value });\r\n    }\r\n\r\n    handleToggleAttendant = (selectedAttendantId, selectedAttendanceId) => {\r\n        const selectedAttendance = this.getSelectedAttendance(selectedAttendanceId);\r\n        const selectedAttendant = this.getSelectedAttendant(selectedAttendance, selectedAttendantId);\r\n        selectedAttendant.hasAttended = !selectedAttendant.hasAttended;\r\n        this.props.toggleAttendant(selectedAttendance, selectedAttendant);\r\n    }\r\n\r\n    getSelectedAttendance = selectedAttendanceId => {\r\n        return this.props.attendanceList.find(attendance => attendance.id === selectedAttendanceId);\r\n    }\r\n\r\n    getSelectedAttendant = (selectedAttendance, selectedAttendantId) => {\r\n        return selectedAttendance.possibleAttendants.find(attendant => attendant.id === selectedAttendantId); // && attendant.date === date\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            this.props.attendanceList.length ?\r\n            <>\r\n                <h2 className=\"heading heading--secondary\">Attendance Page</h2>\r\n                <Form.Group as={Row}>\r\n                    <Form.Label column sm={{ span: 2, offset: 6 }}>See attendance for</Form.Label>\r\n                    <Col sm={{ span: 2 }}>\r\n                        <Form.Control as=\"select\" value={this.state.currentMonth} onChange={this.getSelectedMonth}>\r\n                            <option value=\"\" disabled>Pick a month</option>\r\n                            {\r\n                                months.map((month, index) => <option key={index} value={month}>{month}</option>)\r\n                            }\r\n                        </Form.Control>\r\n                    </Col>\r\n                </Form.Group>\r\n                    <>\r\n                        <Table responsive striped hover>\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>Name</th>\r\n                                    <th>Group</th>\r\n                                    <th>Date</th>\r\n                                    <th>Attended</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {\r\n                                    this.props.attendanceList.map((attendance, index) => attendance.month === this.state.currentMonth ? <Attendance key={index} attendance={attendance} toggleAttendant={this.handleToggleAttendant}/> : null)\r\n                                }\r\n                            </tbody>\r\n                        </Table>\r\n                    </>\r\n            </>\r\n            : \r\n            <div className=\"instructions\">\r\n                <Link to=\"/\">Create a schedule first</Link>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        groupList: state.groupList,\r\n        memberList: state.memberList,\r\n        attendanceList: state.attendanceList\r\n    };\r\n}\r\n\r\nlet mapDispatchToProps = dispatch => ({\r\n    toggleAttendant: (attendance, attendant) => dispatch(toggleAttendant(attendance, attendant))\r\n});\r\n\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    firestoreConnect([{ collection: 'attendanceList' }])\r\n)(AttendancePage);","import React from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport Navigation from './components/navigation';\nimport DanceMovePage from './components/danceMovePage';\nimport GroupListPage from './components/groupListPage';\nimport RegistrationPage from './components/registrationPage';\nimport ProfilePage from './components/profilePage';\nimport Profile from './components/profile';\nimport PaymentPage from './components/paymentPage';\nimport MembersPage from './components/membersPage';\nimport SchedulePage from './components/schedulePage';\nimport AttendancePage from './components/attendancePage';\n\nimport './App.css';\n\nclass App extends React.Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <Navigation />\n        <Switch>\n          <Route exact path=\"/\" render={() => <SchedulePage />} />\n          <Route exact path=\"/dance-move-page\" render={() => <DanceMovePage />} />\n          <Route exact path=\"/group-list-page\" render={() => <GroupListPage />} />\n          <Route exact path=\"/registration-page\" render={() => <RegistrationPage />} />\n          <Route exact path=\"/profile-page\" render={routeProps => <ProfilePage routeProps={routeProps} />} />\n          <Route exact path=\"/profile-page/:id\" render={routeProps => <Profile routeProps={routeProps} />} />\n          <Route exact path=\"/payment-page\" render={() => <PaymentPage />} />\n          <Route exact path=\"/members-page\" render={() => <MembersPage />} />\n          <Route exact path=\"/attendance-page\" render={() => <AttendancePage />} />\n          <Route render={() => <h2>Not Found</h2>} />\n        </Switch>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { combineReducers } from 'redux';\r\nimport { danceListReducer } from './danceListReducer';\r\nimport { groupListReducer } from './groupListReducer';\r\nimport { scheduleListReducer } from './scheduleListReducer';\r\nimport { memberListReducer } from './memberListReducer';\r\nimport { paymentListReducer } from './paymentListReducer';\r\nimport { attendanceListReducer } from './attendanceListReducer';\r\nimport { firestoreReducer } from 'redux-firestore';\r\n\r\nexport const rootReducer = combineReducers({\r\n  danceList: danceListReducer,\r\n  groupList: groupListReducer,\r\n  scheduleList: scheduleListReducer,\r\n  memberList: memberListReducer,\r\n  paymentList: paymentListReducer,\r\n  attendanceList: attendanceListReducer,\r\n  firestore: firestoreReducer\r\n})\r\n","import { ADD_DANCE_MOVE, DELETE_DANCE_MOVE, EDIT_DANCE_MOVE } from '../actions/danceListActions';\r\n\r\nexport function danceListReducer(state = [], action) {\r\n    switch (action.type) {\r\n        case ADD_DANCE_MOVE:\r\n            return [\r\n                ...state, {\r\n                    name: action.payload.newDanceMove.name,\r\n                    difficulty: action.payload.newDanceMove.difficulty,\r\n                    id: action.payload.id\r\n                }\r\n            ]\r\n\r\n        case EDIT_DANCE_MOVE:\r\n            return state.map(danceMove => danceMove.id === action.payload.id ? action.payload.updatedDanceMove : danceMove);\r\n\r\n        case DELETE_DANCE_MOVE:\r\n            return state.filter(danceMove => danceMove.id !== action.payload.id);\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}","import { ADD_GROUP, DELETE_GROUP, EDIT_GROUP } from '../actions/groupListActions';\r\n\r\nexport function groupListReducer(state = [], action) {\r\n    switch (action.type) {\r\n        case ADD_GROUP:\r\n            return [\r\n                ...state, {\r\n                    name: action.payload.newGroup.name,\r\n                    id: action.payload.id\r\n                }\r\n            ]\r\n\r\n        case EDIT_GROUP:\r\n            return state.map(group => group.id === action.payload.id ? action.payload.updatedGroup : group);\r\n\r\n        case DELETE_GROUP:\r\n            return state.filter(group => group.id !== action.payload.id);\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}","import { ADD_SCHEDULE, DELETE_SCHEDULE, EDIT_SCHEDULE } from '../actions/scheduleListActions';\r\n\r\nexport function scheduleListReducer(state = [], action) {\r\n    switch (action.type) {\r\n        case ADD_SCHEDULE:\r\n            return [\r\n                ...state, {\r\n                    group: action.payload.schedule.group,\r\n                    date: action.payload.schedule.date,\r\n                    danceMoves: action.payload.schedule.danceMoves,\r\n                    id: action.payload.id\r\n                }\r\n            ]\r\n            \r\n        case EDIT_SCHEDULE:\r\n            return state.map(schedule => schedule.id === action.payload.id ? action.payload.updatedSchedule : schedule);\r\n\r\n        case DELETE_SCHEDULE:\r\n            return state.filter(schedule => schedule.id !== action.payload.id);\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}","import { ADD_MEMBER, DISABLE_MEMBER, EDIT_MEMBER, RESTORE_MEMBER, SORT_MEMBERS, ADD_DANCE_MOVES_TO_ATTENDANT, REMOVE_DANCE_MOVES_FROM_ATTENDANT } from '../actions/membersActions';\r\n\r\nexport function memberListReducer(state = [], action) {\r\n    switch (action.type) {\r\n        case ADD_MEMBER:\r\n            return [\r\n                ...state, {\r\n                    group: action.payload.newMember.group,\r\n                    id: action.payload.id,\r\n                    name: action.payload.newMember.name,\r\n                    gender: action.payload.newMember.gender,\r\n                    foundOutFrom: action.payload.newMember.foundOutFrom,\r\n                    startDate: action.payload.newMember.startDate,\r\n                    danceMoves: action.payload.newMember.danceMoves,\r\n                    isDisabled: action.payload.newMember.isDisabled\r\n                }\r\n            ]\r\n\r\n        case EDIT_MEMBER:\r\n            return state.map(member => member.id === action.payload.id ? action.payload.updatedMember : member);\r\n\r\n        case DISABLE_MEMBER:\r\n            return state.map(member => member.id === action.payload.id ? Object.assign({}, { ...member, isDisabled: !member.isDisabled }) : member);\r\n\r\n        case RESTORE_MEMBER:\r\n            return state.map(member => member.id === action.payload.id ? Object.assign({}, { ...member, isDisabled: !member.isDisabled }) : member);\r\n\r\n        case SORT_MEMBERS:\r\n            const memberListCopy = Array.from(state);\r\n            return memberListCopy.sort((a, b) => (a[action.payload.sortingCriterium] > b[action.payload.sortingCriterium]) ? -1 : 1);\r\n\r\n        case ADD_DANCE_MOVES_TO_ATTENDANT:\r\n            return state.map(member => member.id === action.payload.attendant.id ? Object.assign({}, { ...member, danceMoves: [...member.danceMoves, ...action.payload.danceMoves.filter(danceMove => !member.danceMoves.includes(danceMove))] }) : member);\r\n\r\n        case REMOVE_DANCE_MOVES_FROM_ATTENDANT:\r\n            return state.map(member => member.id === action.payload.attendant.id ? Object.assign({}, { ...member, danceMoves: member.danceMoves.filter(danceMove => !action.payload.danceMoves.includes(danceMove))}) : member);\r\n            \r\n        default: \r\n            return state;\r\n    }\r\n}","import { ADD_PAYER, DISABLE_PAYER, RESTORE_PAYER, TOGGLE_PAYMENT, EDIT_PAYER } from '../actions/paymentListActions';\r\n\r\nexport function paymentListReducer(state = [], action) {\r\n    switch (action.type) {\r\n      case ADD_PAYER:\r\n        return [\r\n          ...state, {\r\n            name: action.payload.newPayer.name,\r\n            isDisabled: action.payload.newPayer.isDisabled,\r\n            payments: action.payload.newPayer.payments,\r\n            memberId: action.payload.newPayer.memberId,\r\n            id: action.payload.id\r\n          }\r\n      ]\r\n\r\n      case EDIT_PAYER:\r\n        return state.map(payer => payer.id === action.payload.id ? action.payload.updatedPayer : payer);\r\n\r\n      case DISABLE_PAYER: \r\n        return state.map(payer => payer.id === action.payload.id ? Object.assign({}, { ...payer, isDisabled: true }) : payer);\r\n\r\n      case RESTORE_PAYER: \r\n        return state.map(payer => payer.id === action.payload.id ? Object.assign({}, { ...payer, isDisabled: false }) : payer);\r\n\r\n      case TOGGLE_PAYMENT: \r\n        return state.map(payer => payer.id === action.payload.updatedPayer.id ? action.payload.updatedPayer : payer);\r\n\r\n      default:\r\n        return state;\r\n    }\r\n  }  ","import { ADD_ATTENDANCE, DELETE_ATTENDANCE, TOGGLE_ATTENDANT, EDIT_ATTENDANT, EDIT_ATTENDANCE } from '../actions/attendanceListActions';\r\n\r\nexport function attendanceListReducer(state = [], action) {\r\n    switch (action.type) {\r\n      case ADD_ATTENDANCE:\r\n        return [\r\n          ...state, {\r\n            date: action.payload.attendance.date,\r\n            group: action.payload.attendance.group,\r\n            possibleAttendants: action.payload.attendance.possibleAttendants,\r\n            danceMoves: action.payload.attendance.danceMoves,\r\n            scheduleId: action.payload.attendance.scheduleId,\r\n            id: action.payload.id,\r\n            month: action.payload.attendance.month\r\n          }\r\n      ];\r\n\r\n      case EDIT_ATTENDANCE:\r\n        return state.map(attendance => attendance.id === action.payload.id ? action.payload.updatedAttendance : attendance);\r\n\r\n      case DELETE_ATTENDANCE:\r\n        return state.filter(attendance => attendance.id !== action.payload.id);\r\n\r\n      case TOGGLE_ATTENDANT: \r\n        return state.map(attendance => attendance.id === action.payload.id ? action.payload.updatedAttendance : attendance);\r\n\r\n      case EDIT_ATTENDANT: \r\n        return state.map(attendance => attendance.scheduleId === action.payload.updatedAttendance.scheduleId ? action.payload.updatedAttendance : attendance);\r\n\r\n      default:\r\n        return state;\r\n    }\r\n  }  ","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport thunk from 'redux-thunk';\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport { rootReducer } from './reducers/rootReducer';\nimport { Provider } from 'react-redux';\nimport { reduxFirestore, getFirestore } from 'redux-firestore';\nimport { reactReduxFirebase, getFirebase } from 'react-redux-firebase';\nimport firebaseConfig from './config/firebase';\n\nconst persistedState = localStorage.getItem('reduxState') ? JSON.parse(localStorage.getItem('reduxState')) : {};\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nlet store = createStore(rootReducer, persistedState, compose(\n    applyMiddleware(thunk.withExtraArgument({ getFirestore, getFirebase })),\n        reduxFirestore(firebaseConfig),\n        reactReduxFirebase(firebaseConfig),\n    ),\n);\n\nstore.subscribe(() => {\n    console.log(store.getState());\n});\n\nstore.subscribe(() => {\n    localStorage.setItem('reduxState', JSON.stringify(store.getState()))\n});\n\nReactDOM.render(\n    <BrowserRouter>\n        <Provider store={store}>\n            <App />\n        </Provider>\n    </BrowserRouter>, \n    document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}